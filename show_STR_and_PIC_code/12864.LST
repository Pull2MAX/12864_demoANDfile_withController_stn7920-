C51 COMPILER V9.01   12864                                                                 03/05/2024 02:40:42 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE 12864
OBJECT MODULE PLACED IN 12864.OBJ
COMPILER INVOKED BY: D:\MyProgrammeSetUp\KEILC51\C51\BIN\C51.EXE 12864.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          #include"12864.h"
   3          //基础的引脚定义
   4          #define DB P0
   5          sbit lcd12864_EN = P2^7;
   6          sbit lcd12864_RS = P2^6;
   7          sbit lcd12864_RW = P2^5;
   8          
   9          sbit lcd12864_RST = P3^4;
  10          
  11          /*------------------延时函数----------------------*/
  12          
  13          void delay100us(void)   //误差 0us
  14          {
  15   1          unsigned char a,b;
  16   1          for(b=19;b>0;b--)
  17   1              for(a=1;a>0;a--);
  18   1      }
  19          
  20          void delay200us(void)   //误差 0us
  21          {
  22   1          unsigned char a,b;
  23   1          for(b=39;b>0;b--)
  24   1              for(a=1;a>0;a--);
  25   1      }
  26          
  27          void delay15ms(void)   //误差 0us
  28          {
  29   1          unsigned char a,b,c;
  30   1          for(c=5;c>0;c--)
  31   1              for(b=28;b>0;b--)
  32   1                  for(a=52;a>0;a--);
  33   1      }
  34          
  35          
  36          void delay50ms(void)   //误差 0us
  37          {
  38   1          unsigned char a,b;
  39   1          for(b=165;b>0;b--)
  40   1              for(a=150;a>0;a--);
  41   1      }
  42          
  43          /*-------------------基础时序---------------------------*/
  44          //忙检测  + 超时检测
  45          void Is_busy(){
  46   1              unsigned int timeout = 0;
  47   1              lcd12864_EN = 0;
  48   1              lcd12864_RS = 0;
  49   1              lcd12864_RW = 1;
  50   1              lcd12864_EN = 1;
  51   1              while((DB & 0x80) && ++timeout != 0);  //忙状态检测，等待超时时间为60ms
  52   1              lcd12864_EN = 0;        
  53   1      }
  54          //写指令
  55          void lcd12864_write_command(unsigned char command){
C51 COMPILER V9.01   12864                                                                 03/05/2024 02:40:42 PAGE 2   

  56   1              Is_busy();
  57   1              lcd12864_EN = 0;
  58   1              lcd12864_RS = 0;
  59   1              lcd12864_RW = 0;
  60   1              DB = command;
  61   1              lcd12864_EN = 1;
  62   1              delay100us();
  63   1              lcd12864_EN = 0;
  64   1              delay100us();   
  65   1      }
  66          
  67          //读数据
  68          
  69          unsigned char lcd12864_read_data(){
  70   1              unsigned char dat;
  71   1              Is_busy();
  72   1              lcd12864_EN = 0;
  73   1              DB = 0xff; // DB设置高电平代表我要读引脚的数据了
  74   1              lcd12864_RS = 1;
  75   1              lcd12864_RW = 1;
  76   1              lcd12864_EN = 1;
  77   1              delay100us();
  78   1              dat = DB;
  79   1              return dat;
  80   1      }
  81          
  82          //写数据
  83          void lcd12864_write_data(unsigned char dat){
  84   1              Is_busy();
  85   1              lcd12864_EN = 0;
  86   1              lcd12864_RW = 0;
  87   1              lcd12864_RS = 1;
  88   1              lcd12864_EN = 1;
  89   1              DB = dat;
  90   1              delay100us();
  91   1              lcd12864_EN = 0;        
  92   1      }
  93          
  94          /*----------------高层时序------------------*/
  95          //清屏操作
  96          void clear_screen(){
  97   1              Is_busy();
  98   1              lcd12864_write_command(0x01);
  99   1      }
 100          
 101          //初始化函数
 102          void lcd12864_init(){
 103   1              delay50ms();
 104   1              lcd12864_RST = 1;
 105   1              lcd12864_RST = 0;
 106   1              delay50ms();
 107   1              lcd12864_RST = 1;//设置reset
 108   1              
 109   1              lcd12864_write_command(0x30);//设置为基本指令集
 110   1              delay200us();
 111   1              lcd12864_write_command(0x30);
 112   1              delay200us();
 113   1              
 114   1              lcd12864_write_command(0x0c); //display control显示，光标，闪烁都开，让我知道光标在哪里
 115   1              delay200us();
 116   1      
 117   1              lcd12864_write_command(0x01); //清屏模式 DDRAM数据指针清零
C51 COMPILER V9.01   12864                                                                 03/05/2024 02:40:42 PAGE 3   

 118   1              delay15ms();
 119   1      
 120   1              lcd12864_write_command(0x06); //进入模式设置
 121   1              //===初始化结束------
 122   1      }
 123          
 124          //在指定的位置显示指定的内容
 125          void lcd12864_display_pos(unsigned char x,unsigned char y){      //注意128代表的是列的数目，64代表的是行的数目
             -。因此，x代表的是列。y是行。【这句话没有错】
 126   1              //针对汉字：整个屏幕被分成四行，列数是8.针对字符：行数是4，列数是16。【具体去看图】
 127   1              unsigned char displaystart = 0;
 128   1              if(y==0)displaystart=0x80+x;
 129   1              if(y==1)displaystart=0x90+x;
 130   1              if(y==2)displaystart=0x88+x;
 131   1              if(y==3)displaystart=0x98+x;
 132   1              lcd12864_write_command(displaystart);//调用写指令函数确定在哪开始显示我们需要的内容     
 133   1      }
 134          //显示具体的字符
 135          void lcd12864_show_str(unsigned char x,unsigned char y,char mystr){
 136   1              lcd12864_display_pos(x,y);
 137   1              lcd12864_write_data(mystr);     
 138   1      }
 139          //显示具体的汉字
 140          void lcd12864_show_string(unsigned char x,unsigned char y,char mystr[]){
 141   1              lcd12864_display_pos(x,y);
 142   1              while(*mystr!='\0'){
 143   2                      lcd12864_write_data(*mystr++);
 144   2              }
 145   1                      
 146   1      }
 147          
 148          //尝试画图
 149          
 150          
 151          
 152          
 153          
 154          
 155          
 156          
 157          
 158          
 159          
 160          
 161          
 162          
 163          
 164          
 165          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    287    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
